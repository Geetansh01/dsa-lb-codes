/****************Symbols*******************/
1) L :  Leture (Concepts/ Theory)
2) V : Video (Means Homework Ques, no Concept/ Theory)
3) W : Week
4) Interview : Means this topic/ Question has been asked many times in interviews

/***********************Interesting Codes************************************************/
This Folder is not a Part of the DSA Course but contains trivial coding things that are sometimes interesting and sometimes boring as F*** but if not taken care of can lead to
a lot of time being wasted wondering why the code is not working
      1)How Assignment Works
      2)Integer Division Problem : Dividing an "int" datatype by an "int" datatype (int / int) involves truncating the decimal part. This can lead to problems.
                                 eg: If both 3 and 2 are of "int" datatype then 
                                          3/2 = 1 and not 1.5 !! 
      3)std::StringLexicographicComparison
      4)Numbers Starting With 0

/*******************Week 1*****************/
     L1, L2 : Welcome & Orientation
     L3 : Pseudocodes & Flowcharts
     L4 : 1) How Data Stored In Memory
          2) TypeCasting (Implicit/ Explicit)
     L5 : Patterns
     V7-19 : HW Questions
          1) Patterns Q3: Hollow Inverted Half Pyramid
          2) Patterns Q4 : Hollow Full Star Pyramid


/*******************Week 2*****************/
     L20 : More Patterns (Hollow Diamond etc.)
     L21 : 1) More Patterns(Numeric Full Pyramid, Numeric Hollow Pyramid)
           2) Bitwise Operators(Bitwise AND, OR, NOT, XOR, Left Shift, Right Shift)
           3) Pre-Post Increment / Decrement
           4) Switch Case
           5) Break / Continue, Variable Scoping, Operator Precedence
     L22 : 1)Functions, Function Call Stack, Pass By Value
     L23 : 1) Binary To Decimal And Vice-a-versa
           2) Program To Convert Decimal To Binary by : 
               (i) Division method
               (ii) Bitwise method
     V24-33 : HW Questions Patterns
               1) Numeric Palindrome Equilateral Pyramid
               2) Solid Half Diamond
               3) Fancy Pattern #3
               4) Floyd's Triangle Pattern
               5) Pascal's Triangle Pattern
     V34-41 : HW Questions Functions
               1) Q 36 : Function to Factorial of a number
               2) Q 37 : Function to Chk if given no prime or not
               3) Q 38 : Function to print All Prime From 1 to N 
               4) Q 39 : Reverse Integer [LeetCode : https://leetcode.com/problems/reverse-integer/]
               5) Q : Decimal To Binary Print
               6) Q : Binary to Decimal
               7) Q 40 : Set The Kth Bit [GFG : https://practice.geeksforgeeks.org/problems/set-kth-bit3724/1]
               8) Q 41 : Convert the Temperature [LeetCode : https://leetcode.com/problems/convert-the-temperature/submissions/]



/*******************Week 3*****************/
      L42 : Introduction to Time & Space Complexity
      L43 : 1)Arrays
            2)Linear Search in Array
            3)Reversing an Array (Two pointer approach : start & end)
      L44 : Data Strcture - Vector
            1D Array Questions:
                  1)Q1 : Unique element in array Question [Interview]
                  2)Q3 : Pair Sum [Interview]
                  3)Q4 : Sort 0's and 1's [Interview]
      L45 : 2D Arrays Questions:
                  0) Printing Transpose Of 2D Matrix
                  1) Print Row Sum
                  2) Linear Search on 2d Array
                  3) Max No in Array
                  4) Transpose Matrix (2D Array)(Different from Printing Transpose Of 2D Matrix)

                  Using Vectors for 2D Arrays:
                  1) Method 1 To make 2D Arrays with vectors
                  2) Method 2 To make 2D Arrays with vectors
      V46-51 : 1D Array HW Questions 
                  1) Q 46 : Sort Colors [LeetCode : https://leetcode.com/problems/sort-colors/description/]
                  2) Q 48 : Find Duplicate Number [LeetCode : https://leetcode.com/problems/find-the-duplicate-number/description/]
                  3) Q 49 : Missing Elements From An Array With Duplicates
                  4) Q 50 : Find First Repeating Element [GFG : https://practice.geeksforgeeks.org/problems/first-repeating-element4018/1]
                  5) Q 51 : Common Elements In 3 Sorted Array[GFG : https://practice.geeksforgeeks.org/problems/common-elements1132/1] [Interview]
      V52-54 : 2D (Matrix) Array HW Questions
                  1) Q 52 : Wave Print A Matrix [Interview]
                  2) Q 53 : Spiral Print A Matrix [Interview] [LeetCode : https://leetcode.com/problems/spiral-matrix/description/]
                  3) Q 54A : Add two numbers represented by two arrays [GFG : https://practice.geeksforgeeks.org/problems/add-two-numbers-represented-by-two-arrays2408/1]
                     Q 54B : Factorials of large numbers [GFG : https://practice.geeksforgeeks.org/problems/factorials-of-large-numbers2508/1]
      Limaginary : This lecture was done from YouTube (DSA LB + StriverA2Z DSA)
                  1) Rotate Array [LeetCode : https://leetcode.com/problems/rotate-array/description/]
                  2) Check if Array Is Sorted and Rotated [LeetCode : https://leetcode.com/problems/check-if-array-is-sorted-and-rotated/description/]
                  3) Majority Element In Array [LeetCode : https://leetcode.com/problems/majority-element/description/][Moore's Voting Algorithm]
                  4) Rotate Image [LeetCode : https://leetcode.com/problems/rotate-image/description/]
                  5) BuySellStock Level 1 [LeetCode : https://leetcode.com/problems/best-time-to-buy-and-sell-stock/description/]


/*******************************************Week 4***************************************/
      L55 : 1) Binary Search
            2) First Occurence of an Element (Using Binary Search)
            3) Last Occurence of an Element (Using Binary Search)
            4) Total Occurences of an Element (Using Binary Search)(code DIY, just logic discussed)
            5) Peak Index in a Mountain Array [LeetCode : https://leetcode.com/problems/peak-index-in-a-mountain-array/description/][Interview]
      L56 : 1) Square Root using Binary Search
            2) Binary Search in 2D Arrays
      L57 : 1) BS in Nearly Sorted Array (NSA)
            2) Division of Two Numbers Using BS
            3) Find the odd appearing element in O(Log n) time [https://www.geeksforgeeks.org/find-the-element-that-odd-number-of-times-in-olog-n-time/]
      L58 : Week 4 Connect Class
            1) Find Pivot Element in Rotated Array
            2) Search in Rotated Sorted Array [LeetCode : https://leetcode.com/problems/search-in-rotated-sorted-array/description/]
      V59-60_HWQues :
            1) Q 59 : K-Diff Pairs In An Array[LeetCode : https://leetcode.com/problems/k-diff-pairs-in-an-array/submissions/]
            2) Q 60 : Find K Closest Elements [LeetCode : https://leetcode.com/problems/find-k-closest-elements/]
      L61 : ExponentialSearch
      V62-66_HWQues :
            1) Q 62 : Book Allocation Problem[GFG  https://practice.geeksforgeeks.org/problems/allocate-minimum-number-of-pages0937/1]
            2) Q 63 : Painters Partition Problem[GFG : https://practice.geeksforgeeks.org/problems/the-painters-partition-problem1535/1]
            3) Q 64 : Aggresive Cows[GFG : https://practice.geeksforgeeks.org/problems/aggressive-cows/1]
            4) Q 65 : EKO SPOJ [SPOJ : https://www.spoj.com/problems/EKO/cstart=80]
            5) Q 66 : PRATA SPOJ[SPOJ : https://www.spoj.com/problems/PRATA/]


/*******************************************Week 5***************************************/
      L67 : 1) How to take input in character arrays (or c style string)
                  1) Method 1 How to input in character arrays : One character at a time
                  2) Method 2 How to input in character arrays : cin
                  3) Method 3 How to input in character arrays : getline
            2) Basic Ques
                  1) Length of string
                  2) String Reversal
                  3) Replace Spaces with @
                  4) Check If Palindrome
                  5) Change Upper case to lower and vice a versa
            3) String (class in c++ standard library)
                  1) Input in string
                  2) Comparing string
                  3) Find something in a string
                  4) Replace in a string
                  5) Erase from string
      L68 : string questions (Some of the below are easy questions from leetcode , not all have been saved locally)
            1)Remove All Adjacent Duplicates In String [LeetCode : https://leetcode.com/problems/remove-all-adjacent-duplicates-in-string/]
            2)Remove All Occurrences of a Substring [LeetCode : https://leetcode.com/problems/remove-all-occurrences-of-a-substring/description/]
            3)Valid Palindrome II [LeetCode : https://leetcode.com/problems/valid-palindrome-ii/description/]
            4)Minimum Time Difference [LeetCode : https://leetcode.com/problems/minimum-time-difference/description/]
             ----->Code Saved Locally for 4)
            5)Palindromic Substrings [LeetCode : https://leetcode.com/problems/palindromic-substrings/description/]
             ----->Code Saved Locally for 5)
      L69 : week 4 connect class
            1)Custom Comparator
      LImaginary-W5 : [This lecture was done from YouTube LB]
            1)Selection Sort
            2)Bubble Sort
            3)Insertion Sort
      V70-83 : HW Questions (Some are easy, the code for these is not saved locally)
            1) Q 70 : Valid Anagram[LeetCode : https://leetcode.com/problems/valid-anagram/description/]
            2) Q 71 : Reverse Only Letters[LeetCode : https://leetcode.com/problems/reverse-only-letters/]
            3) Q 72 : Longest Common Prefix [LeetCode : https://leetcode.com/problems/longest-common-prefix/]
            4) Q 73 : Reverse Vowels Of A String [LeetCode : https://leetcode.com/problems/reverse-vowels-of-a-string/description/]
            5) Q 74 : Isomorphic Strings[LeetCode : https://leetcode.com/problems/isomorphic-strings/description/]
            6) Q 75 : Reorganise String [LeetCode : https://leetcode.com/problems/reorganize-string/]
             ------>Code saved locally for 6)
            7) Q 76 : Group Anagrams[LeetCode : https://leetcode.com/problems/group-anagrams/description/]
                  1) concept of std::arrays
             ------>Code saved locally for 7)
            8) Q 77 : Longest Palindromic Substring [LeetCode : https://leetcode.com/problems/longest-palindromic-substring/description/]
             ------>Code saved locally for 8)
            9) Q 78 : Find the Index of the First Occurrence in a String [LeetCode : https://leetcode.com/problems/find-the-index-of-the-first-occurrence-in-a-string/]
             >V78 discusses the naive approach to solve this problem and leetcode will accept the naive solution as beating 100%
             >But better algos exist to solve this problem such as :
                  (i) Rabin Karp Algorithm
                  (ii) KMP Algorithm
            10) Q 79 : String To Integer (atoi)[LeetCode : https://leetcode.com/problems/string-to-integer-atoi/description/]
            11) Q 80 : String Compression [LeetCode : https://leetcode.com/problems/string-compression/description/]
             >This ques is implementing "Run Length Encoding"
             ------->Code saved locally for 11)
            12) Q 81 : Integer To Romans [Interview][Leetcode : https://leetcode.com/problems/integer-to-roman/description/]
            13) Q 82 : Zig-Zag Conversion[LeetCode : https://leetcode.com/problems/zigzag-conversion/]
            14) Q 83 : Largest Number[LeetCode : https://leetcode.com/problems/largest-number/description/]


/**********************Week 6**************************************/
      L_84 : Pointers
            1)DataStructure : Symbol Table
            2)Segmentation fault 
            3)NULL pointer
            4)How can you pass one function to another as argument? (DIY)
      L_85 : Pointers and arrays
            1)Integer arrays and pointers
                  1)Base Address of an array
                  2)Accessing elements of array
                  3)Array vs Pointer
            2)Character Arrays and Pointers
                  1)Pointers with character arrays
                  2)Pointers with a single character 
      L86 : 1)Count Primes
                  1)Naive Approach
                  2)Sqrt Approach
                  3)Sieve of Eratosthenes [LeetCode : https://leetcode.com/problems/count-primes/description/]
            2)Finding GCD/HCF/LCM : Euclid's Algorithm for GCD of two Numbers [GFG : https://practice.geeksforgeeks.org/problems/gcd-of-two-numbers3459/1]
            3)Modulo Arithmetic
            4)Exponentiation : 
                  1)Slow Exponentiation 
                  2)Fast Exponentiation 
                        1)Modular Exponentiation for large numbers [GFG : https://practice.geeksforgeeks.org/problems/modular-exponentiation-for-large-numbers5537/1]
      L87 : 1)Chain of pointers
            2)Reference variable
            3)Pass by reference & Return by reference
            4)A famous interview question [Interview]
      L88 : 1)Optimized Sieve Of Eratosthenes
            2)Segmented Sieve Of Eratosthenes
      L89 : 1)Practice Questions on pointers
      L90 : TC and SC for RE functions
      L91 : 1)Recursion
            2)Simple RE Ques :
                  1)Printing Counting 
                  2)Reverse Counting
                  3)Factorial
                  4)Fibonacci
            3)Recursive call Stack
            4)Recursion tree
            5)Head Recursion / Tail Recursion
      L92 : 1)Climbing Stairs[LeetCode : https://leetcode.com/problems/climbing-stairs/]
            2)Printing Array using RE
            3)MinMaxElementInArray using RE
            4)Key In String Or Not
            5)Print Number using RE
      L93 : 1)ArraySortedOrNot using RE
            2)Binary Search using RE
            3)SubSequences of String [Pick/Don't Pick Method OR Exclude-Include Method][Interview]
      L94 : 1)Coin Change [Interview] [LeetCode : https://leetcode.com/problems/coin-change/]
            2)Rod Problem 
            3)Maximum Sum Of Non-Adjacent Elements [Pick/Don't Pick Method OR Exclude-Include Method]
                  I have two .cpp solution files:
                  1)MaximumSumOfNonAdjacentElementsEASY.cpp
                  2)MaximumSumOfNonAdjacentElementsBETTER.cpp [GFG : https://practice.geeksforgeeks.org/problems/max-sum-without-adjacents2430/1]
      L95 : Ques : Last Occurence Of A Char  
      L96 : Reverse A String RE    
      L97 : Add Strings RE [LeetCode : https://leetcode.com/problems/add-strings/submissions/1075672381/]
      L98 : PalindromeCheckRE
      L99 : Remove All Occurrences of a Substring RE [https://leetcode.com/problems/remove-all-occurrences-of-a-substring/submissions/]
      L100 : Print All Subarrays Using RE
      L101 : Buy & Sell Stocks[LeetCode : https://leetcode.com/problems/best-time-to-buy-and-sell-stock/description/]
      L102 : House Robber Problem
      L103 : Integer to English Words[LeetCode : https://leetcode.com/problems/integer-to-english-words/description/]
      L104 : Wild Card Matching [LeetCode : https://leetcode.com/problems/wildcard-matching/]
      L105 : Perfect Squares[LeetCode : https://leetcode.com/problems/perfect-squares/description/]
      L106 : Minimum Cost For Tickets [LeetCode : https://leetcode.com/problems/minimum-cost-for-tickets/]
      L107 : Number Of Dice Roll With Target Sum[LeetCode : https://leetcode.com/problems/number-of-dice-rolls-with-target-sum/]
      L108 : Merge Sort
      L109 : 1)Quick Sort
             2)Backtracking (ex : All Permutations of a string)
      L110 : Rat in a Maze Problem - I [GFG : https://practice.geeksforgeeks.org/problems/rat-in-a-maze-problem/1]
      L111 : N Queens [LeetCode : https://leetcode.com/problems/n-queens/description/]
      L112 : 1)Generate Parentheses [LeetCode : https://leetcode.com/problems/generate-parentheses/description/ ]
             2)Letter Combinations of a Phone Number [LeetCode : https://leetcode.com/problems/letter-combinations-of-a-phone-number/description/]
      L_ImaginaryW6 : 
            1)Sudoku Solver [LeetCode : https://leetcode.com/problems/sudoku-solver/description/]
      V114-122 : HW Ques
            1)Q114 : Counting Inversions [Hackerrank : https://www.hackerrank.com/challenges/ctci-merge-sort/problem][Interview]
            2)L115 : In Place Merge Sort [This was a lecture]
            3)V116 : Max Sub Array Sum [LeetCode : https://leetcode.com/problems/maximum-subarray/description/]
                     [Kadane's Algorithm]
            4)L117 : Slightly optimized QuickSort (Partitioning logic optimized from TC O(2N) to O(N)) (code not saved locally)
            5)V118 : Combination Sum [LeetCode : https://leetcode.com/problems/combination-sum/description/] (code not saved locally it's simple Backtracking)
            6)V119 : Combination Sum II [LeetCode : https://leetcode.com/problems/combination-sum-ii/description/]
            7)V120 : Permutation - II[LeetCode : https://leetcode.com/problems/permutations-ii/description/]
            8)V121 : Beautiful Arrangement [LeetCode : https://leetcode.com/problems/beautiful-arrangement/description/]
            9)V122 : Distribute Repeating Integers [LeetCode : https://leetcode.com/problems/distribute-repeating-integers/description/]


/**********************Week 8**************************************/
      L136 : LL (using class ofcourse)
             1)Intro and Printing SLL
             2)Creation and Insertion in singly LL
             3)Deletion in SLL
      L137 : 1)Insertion and Deletion in DLL
             2)Reverse SLL (Using RE, using Loop)
      L138 : 1)Find Middle node of LL [Tortoise-Hare Algorithm/ Slow-Fast pointer Algorithm] [Interview]
             2)Reverse SLL in groups of K [Interview]
             3)Chk if given SLL in input is circular or not:
                  1)using temp
                  2)using slow/fast pointers
                  3)using map 
             (Code to implement these was HW as it's simple stuff 😜) 
             
             4)Detect and Delete Loop type questions [Interview]:
                  1)Detect Loop
                  2)Find Starting of Loop
                  3)Remove Loop
      L139 : 1)Check if given SLL is Palindrome
                  2)Remove duplicates from a sorted SLL
                  3)Sort 0's , 1's, 2's in SLL :
                  1)Replacing Data in SLL Allowed
                  2)Replacing Data in SLL NOT Allowed [Interview]
                  4)Add 2 numbers represented by SLL [Interview]
      V140-149_HWQues : HW Ques (Some are very easy so code not saved locally for all)
            1)Q140 : Print Kth Node From The End [Hackerrank : https://www.hackerrank.com/challenges/get-the-value-of-the-node-at-a-specific-position-from-the-tail/problem]
            2)Q141 : Intersection Of 2 Link Lists [LeetCode : https://leetcode.com/problems/intersection-of-two-linked-lists/description/]
             (Code saved Locally)
            3)Q142 : Merge Two Sorted Lists [LeetCode : https://leetcode.com/problems/merge-two-sorted-lists/description/]
            4)Q143 : Sort List Using Merge Sort[leetCode : https://leetcode.com/problems/sort-list/description/]
             